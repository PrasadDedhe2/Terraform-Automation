terraform{
backend "azurerm"{
source = "hashicorp/azurerm"
version = "=>3.5.3"
}

required_version = ">=1.3.2"

provider "azurerm"{
features{}
}
}




//[1]for each basic syntax it is similar to count
resource "aws_iam_user" "the-accounts" {
  for_each = toset( ["Todd", "James", "Alice", "Dottie"] )
  name     = each.key
}







// [2] for each basic syntax it is similar to count
resource "azurerm_resource_group" "rg" {
  for_each = {
    a_group = "eastus"
    another_group = "westus2"
  }
  name     = each.key
  location = each.value
}






// [3] for each in a module similar to count
# my_buckets.tf ---> Here we are calling the module stored in publish_bucket
module "bucket" { --------------------------------> "bucket" is a local name, so doesn't matter what is the name of the actual module name. Source is more important
  for_each = toset(["assets", "media"])
  source   = "./publish_bucket"             -------> This is where the module stored
  name     = "${each.key}_bucket"
}

# publish_bucket/bucket-and-cloudfront.tf ---> I guess this is our variable.tf file
variable "name" {} # this is the input parameter of the module

resource "aws_s3_bucket" "example" { -------------> this is the actual module defination
  # Because var.name includes each.key in the calling module block, its value will be different for each instance of this module.

}

