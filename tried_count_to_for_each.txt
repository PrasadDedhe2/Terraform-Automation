//complex example. In this case one should use for_each rather than count as in for_each key:value (Server0 = 10.10.10.1) is available. Which I have tried to write post line 29
variable "subnet_ids" {
  type = list(string)                   subnet_id = [10.10.10.1, 10.10.10.2, 10.10.10.3, 10.10.10.4]
}

resource "aws_instance" "server" {
  # Create one instance for each subnet
  count = length(var.subnet_ids) --> 4

  ami           = "ami-a1b2c3d4"
  instance_type = "t2.micro"
  subnet_id     = var.subnet_ids[count.index]

  tags = {
    Name = "Server ${count.index}"
  }
}

output:

Server0 -> 10.10.10.1
Server1 -> 10.10.10.2
Server2 -> 10.10.10.3
Server3 -> 10.10.10.4




// USING FOR EACH and calling it as a MODULE


module "myserverips"{
	source = "SDO/AWS_vms"
	servername = [Server0,Server1,Server2,Server3]
	serverip = [10.10.10.1, 10.10.10.2, 10.10.10.3, 10.10.10.4]
}


resource "aws_instance" "server" {

for_each = {
	var.serverip[index] = var.serverip][index]
}
   ami          = "ami-a1b2c3d4"
  instance_type = "t2.micro"
  name = each.key
  subnet_address = each.value

}

variable "servername" {
type = list(string)
}

variable "serverip" {
type = list(string)
}